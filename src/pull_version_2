"""
Script to pull Unconstrained Five-Factor Model data from Bloomberg using xbbg.

Factors:
1. Russell 1000 Index (Equity) - Bloomberg: "RUI Index"
2. BofA Merrill Lynch 7-10 Year U.S. Treasury Index (Fixed Income - Treasury Bonds) - Bloomberg: "BAML7-10US Index"
3. BofA Merrill Lynch 7-10 Year BBB U.S. Corporate Index (Fixed Income - Corporate Bonds) - Bloomberg: "BAML7-10BBB Index"
4. U.S. Dollar Index (Currency) - Bloomberg: "DXY Curncy"
5. S&P GSCI Crude Oil Index (Commodities) - Bloomberg: "SPGSCI Index"

- The time range is set in settings.py.
- The data is saved to _data/unconstrained_5factors.csv.
- Data is resampled to monthly frequency using the first observation of each month.
"""

from xbbg import blp
import pandas as pd
from settings import START_DATE, END_DATE, DATA_DIR

def pull_factors(start_date=START_DATE, end_date=END_DATE):
    """Fetches Unconstrained Five-Factor Model data from Bloomberg using xbbg."""
    # Adjust the start and end dates
    adjusted_start_date = pd.to_datetime(start_date)
    adjusted_end_date = pd.to_datetime(end_date) + pd.DateOffset(months=1)  # Add one month for resampling
    
    # Define Bloomberg tickers for the factors
    tickers = [
        'RUI Index',           # Russell 1000 Index (Equity)
        'BAML7-10US Index',     # BofA Merrill Lynch 7-10 Year U.S. Treasury Index
        'BAML7-10BBB Index',    # BofA Merrill Lynch 7-10 Year BBB U.S. Corporate Index
        'DXY Curncy',          # U.S. Dollar Index (Currency)
        'SPGSCI Index'         # S&P GSCI Crude Oil Index (Commodities)
    ]
    
    # Fetch daily closing prices (PX_LAST) from Bloomberg using xbbg
    df = blp.bdh(
        tickers=tickers,
        flds='PX_LAST',
        start_date=adjusted_start_date.strftime('%Y-%m-%d'),
        end_date=adjusted_end_date.strftime('%Y-%m-%d')
    )
    
    # The returned DataFrame has a MultiIndex for columns (ticker, field).
    # Extract the PX_LAST data for each ticker.
    df = df.xs('PX_LAST', axis=1, level=1)
    
    # Resample data to monthly frequency: use the first observation of each month.
    df = df.resample('MS').first()
    
    # Rename columns for clarity
    df.rename(columns={
        'RUI Index': 'Russell1000',
        'BAML7-10US Index': 'BofA_Treasury',
        'BAML7-10BBB Index': 'BofA_Corporate',
        'DXY Curncy': 'USD_Index',
        'SPGSCI Index': 'GSCI_CrudeOil'
    }, inplace=True)
    
    # Check for missing values and forward fill if necessary
    if df.isnull().values.any():
        print(df[df.isnull().any(axis=1)])
        print("Warning: Missing values in Unconstrained Five-Factor Model data. Forward filling missing values.")
        df.fillna(method='ffill', inplace=True)
    
    return df

def main():
    """Main function to pull and save Unconstrained Five-Factor Model data."""
    df = pull_factors()
    output_path = f"{DATA_DIR}/unconstrained_5factors.csv"
    df.to_csv(output_path)
    print(f"Unconstrained Five-Factor data saved to {output_path}")

if __name__ == "__main__":
    main()
